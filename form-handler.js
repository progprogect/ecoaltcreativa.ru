/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º –¥–ª—è —Å–∞–π—Ç–∞ ecoalternativa.ru
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞—è–≤–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏
 */

class FormHandler {
  constructor() {
    this.fallbackEmail = 'progprogect@gmail.com';
    this.contactInfo = {
      phones: ['+375 (44) 77-33-238', '+7 (499) 923-38-15'],
      email: 'info@ecoalternativa.ru',
      telegram: 'https://t.me/+375447733238',
      whatsapp: 'https://wa.me/375447733238'
    };
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ EmailJS
    this.emailJSConfig = {
      serviceId: 'service_kc39cmi', // ‚úÖ –í–∞—à Service ID –∏–∑ EmailJS (—É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π)
      templateId: 'template_eouf19q', // ‚úÖ –í–∞—à Template ID
      publicKey: 'qhL-cAKscZ7nMqAdq' // ‚úÖ –í–∞—à Public Key –∏–∑ Account > General
    };
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º
    this.submissionStates = new Map();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmailJS
    this.initEmailJS();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmailJS
   */
  initEmailJS() {
    if (typeof emailjs !== 'undefined' && this.emailJSConfig.publicKey !== 'YOUR_EMAILJS_PUBLIC_KEY') {
      emailjs.init(this.emailJSConfig.publicKey);
      console.log('‚úÖ EmailJS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } else {
      console.log('‚ö†Ô∏è EmailJS –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
  }

  /**
   * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  setButtonState(button, state = 'normal', customText = null) {
    if (!button) return;
    
    const originalText = button.dataset.originalText || button.textContent;
    button.dataset.originalText = originalText;
    
    switch (state) {
      case 'loading':
        button.disabled = true;
        button.innerHTML = `
          <div class="flex items-center justify-center">
            <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-current" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            ${customText || '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...'}
          </div>
        `;
        button.classList.add('opacity-80', 'cursor-not-allowed');
        break;
        
      case 'success':
        button.disabled = true;
        button.innerHTML = `
          <div class="flex items-center justify-center">
            <svg class="mr-2 h-5 w-5 text-current" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            ${customText || '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!'}
          </div>
        `;
        button.classList.remove('opacity-80', 'cursor-not-allowed');
        button.classList.add('bg-green-500', 'hover:bg-green-500');
        break;
        
      case 'error':
        button.disabled = false;
        button.innerHTML = `
          <div class="flex items-center justify-center">
            <svg class="mr-2 h-5 w-5 text-current" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
            ${customText || '–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'}
          </div>
        `;
        button.classList.remove('opacity-80', 'cursor-not-allowed', 'bg-green-500', 'hover:bg-green-500');
        button.classList.add('bg-red-500', 'hover:bg-red-600');
        break;
        
      default: // normal
        button.disabled = false;
        button.textContent = originalText;
        button.classList.remove('opacity-80', 'cursor-not-allowed', 'bg-green-500', 'hover:bg-green-500', 'bg-red-500', 'hover:bg-red-600');
        break;
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID —Ñ–æ—Ä–º—ã
   */
  getFormId(form) {
    return form.id || form.closest('[id]')?.id || 'unknown-form';
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —Å–ø–∞–º–∞
   */
  checkSpamProtection(formId) {
    const lastSubmission = this.submissionStates.get(formId);
    const now = Date.now();
    const minInterval = 3000; // 3 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
    
    if (lastSubmission && (now - lastSubmission) < minInterval) {
      const remainingTime = Math.ceil((minInterval - (now - lastSubmission)) / 1000);
      throw new Error(`–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${remainingTime} —Å–µ–∫. –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π`);
    }
    
    this.submissionStates.set(formId, now);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ EmailJS —Å —Ç–∞–π–º–∞—É—Ç–æ–º
   */
  async sendViaEmailJS(emailData, timeoutMs = 10000) {
    if (typeof emailjs === 'undefined') {
      throw new Error('EmailJS –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
    }
    
    if (this.emailJSConfig.publicKey === 'YOUR_EMAILJS_PUBLIC_KEY') {
      throw new Error('EmailJS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - —É–∫–∞–∂–∏—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á');
    }

    const templateParams = {
      to_email: this.fallbackEmail,
      subject: emailData.subject,
      timestamp: emailData.timestamp,
      source: emailData.source,
      client_name: emailData.formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
      client_phone: emailData.formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω',
      client_email: emailData.formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω',
      client_volume: emailData.formData.volume || '–ù–µ —É–∫–∞–∑–∞–Ω',
      client_comment: emailData.formData.comment || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è',
      full_message: emailData.message
    };

    console.log('üìß –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ EmailJS...', {
      serviceId: this.emailJSConfig.serviceId,
      templateId: this.emailJSConfig.templateId,
      templateParams
    });
    
    // –ü—Ä–æ–º–∏—Å —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    const emailPromise = emailjs.send(
      this.emailJSConfig.serviceId,
      this.emailJSConfig.templateId,
      templateParams
    );
    
    const timeoutPromise = new Promise((_, reject) => {
      setTimeout(() => reject(new Error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏')), timeoutMs);
    });
    
    const result = await Promise.race([emailPromise, timeoutPromise]);
    
    console.log('‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ EmailJS:', result);
    return { success: true, result };
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
   * @param {FormData} formData - –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
   * @param {string} source - –∏—Å—Ç–æ—á–Ω–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏
   * @param {HTMLElement} button - –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
   * @returns {Promise<{success: boolean, message?: string}>}
   */
  async sendForm(formData, source, button = null) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∞–º-–∑–∞—â–∏—Ç—É
      const formId = button ? this.getFormId(button.form) : 'unknown';
      this.checkSpamProtection(formId);
      
             // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
       this.setButtonState(button, 'loading');
      
      const currentTime = new Date().toLocaleString('ru-RU', {
        year: 'numeric',
        month: '2-digit', 
        day: '2-digit',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit'
      });

      // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const emailData = {
        to: this.fallbackEmail,
        subject: `üåø –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ ecoalternativa.ru - ${source}`,
        timestamp: currentTime,
        source: source,
        formData: {
          name: formData.get('name') || '',
          phone: formData.get('phone') || '',
          email: formData.get('email') || '',
          volume: formData.get('volume') || '',
          comment: formData.get('comment') || formData.get('description') || ''
        }
      };

      // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      const message = this.formatMessage(emailData);
      emailData.message = message;

      // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ EmailJS —Å –∫–æ—Ä–æ—Ç–∫–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º
      try {
        console.log('üìß –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ EmailJS...');
        
        // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω–¥–∏–∫–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        const [emailResult] = await Promise.all([
          this.sendViaEmailJS(emailData, 8000), // 8 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º
          new Promise(resolve => setTimeout(resolve, 800)) // –ú–∏–Ω–∏–º—É–º 800–º—Å –¥–ª—è UX
        ]);
        
                 console.log('‚úÖ Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ EmailJS');
         
         // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
         this.setButtonState(button, 'success');
         
         // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è —É—á–µ—Ç–∞
         this.saveToLocalStorage(emailData);
         
         return { 
           success: true, 
           message: '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å–≤—è–∂–µ–º—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.' 
         };
      } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ EmailJS:', error.message);
        
        // –ï—Å–ª–∏ EmailJS –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
        console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –ª–æ–∫–∞–ª—å–Ω–æ...');
        this.saveToLocalStorage(emailData);
        
                 // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
         this.sendTelegramNotification(emailData);
         
         // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ (fallback —Ä–µ–∂–∏–º)
         this.setButtonState(button, 'success', '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!');
         
         // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É
         console.log('üìß –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞:', {
           subject: emailData.subject,
           formData: emailData.formData,
           timestamp: emailData.timestamp
         });

         // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
         return { 
           success: true, 
           message: `–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å–≤—è–∂–µ–º—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n–î–ª—è —Å—Ä–æ—á–Ω–æ–π —Å–≤—è–∑–∏:\nüìû ${this.contactInfo.phones.join(' –∏–ª–∏ ')}\nüìß ${this.contactInfo.email}` 
         };
      }
         } catch (error) {
       console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', error);
       
       // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏
       this.setButtonState(button, 'error');
       
       return {
         success: false,
         message: error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.'
       };
     } finally {
       // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
       setTimeout(() => {
         this.setButtonState(button, 'normal');
       }, 2000); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (—É—Å–ø–µ—Ö/–æ—à–∏–±–∫–∞)
     }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   */
  async sendTelegramNotification(emailData) {
    try {
      // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot API (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
      const telegramBotToken = 'YOUR_BOT_TOKEN'; // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
      const telegramChatId = 'YOUR_CHAT_ID'; // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id
      
      if (telegramBotToken === 'YOUR_BOT_TOKEN') {
        console.log('üí¨ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–Ω—É–∂–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞)');
        return;
      }

      const telegramMessage = `üåø –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê\n\nüë§ ${emailData.formData.name}\nüìû ${emailData.formData.phone}\nüìß ${emailData.formData.email}\nüì¶ ${emailData.formData.volume} —Ç–æ–Ω–Ω\nüí¨ ${emailData.formData.comment}\n\n‚è∞ ${emailData.timestamp}\nüìç ${emailData.source}`;
      
      await fetch(`https://api.telegram.org/bot${telegramBotToken}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: telegramChatId,
          text: telegramMessage,
          parse_mode: 'HTML'
        })
      });
      
      console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
    } catch (error) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram:', error.message);
    }
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è email
   */
  formatMessage(emailData) {
    const { formData, timestamp, source } = emailData;
    
    return `
üåø –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê ECOALTERNATIVA.RU

‚è∞ –í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏: ${timestamp}
üìç –ò—Å—Ç–æ—á–Ω–∏–∫ –∑–∞—è–≤–∫–∏: ${source}

üë§ –ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï –ö–õ–ò–ï–ù–¢–ê:
‚ñ´Ô∏è –ò–º—è: ${formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
‚ñ´Ô∏è –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚ñ´Ô∏è Email: ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚ñ´Ô∏è –¢—Ä–µ–±—É–µ–º—ã–π –æ–±—ä–µ–º (—Ç–æ–Ω–Ω): ${formData.volume || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üí¨ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
${formData.comment || '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üè≠ –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - Shvedoff
üìß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ ecoalternativa.ru
üìû –î–ª—è —Å–≤—è–∑–∏: ${this.contactInfo.phones.join(' | ')}
üìß Email: ${this.contactInfo.email}
    `.trim();
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
   */
  saveToLocalStorage(emailData) {
    try {
      const leads = JSON.parse(localStorage.getItem('ecoalternativa_leads') || '[]');
      const leadWithId = {
        id: Date.now(),
        ...emailData,
        saved_at: new Date().toISOString(),
        status: 'new'
      };
      
      leads.unshift(leadWithId);
      
      // –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 200 –∑–∞—è–≤–æ–∫
      localStorage.setItem('ecoalternativa_leads', JSON.stringify(leads.slice(0, 200)));
      
      console.log('üíæ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ. –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫:', leads.length);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
      this.showAdminNotification(leadWithId);
      
    } catch (error) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É –ª–æ–∫–∞–ª—å–Ω–æ:', error);
    }
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  showAdminNotification(lead) {
    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ)
    if ('Notification' in window && Notification.permission === 'granted') {
      new Notification('üåø –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ ecoalternativa.ru', {
        body: `${lead.formData.name} (${lead.formData.phone})`,
        icon: '/favicon.ico'
      });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const originalTitle = document.title;
    document.title = 'üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ - ' + originalTitle;
    setTimeout(() => {
      document.title = originalTitle;
    }, 5000);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
   */
  getSavedLeads() {
    try {
      return JSON.parse(localStorage.getItem('ecoalternativa_leads') || '[]');
    } catch {
      return [];
    }
  }

  /**
   * –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞—è–≤–∫—É –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é
   */
  markLeadAsProcessed(leadId) {
    try {
      const leads = this.getSavedLeads();
      const lead = leads.find(l => l.id === leadId);
      if (lead) {
        lead.status = 'processed';
        lead.processed_at = new Date().toISOString();
        localStorage.setItem('ecoalternativa_leads', JSON.stringify(leads));
        console.log('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è:', leadId);
      }
    } catch (error) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å –∑–∞—è–≤–∫—É:', error);
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
   */
  clearSavedLeads() {
    localStorage.removeItem('ecoalternativa_leads');
    console.log('üóëÔ∏è –í—Å–µ –ª–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ —É–¥–∞–ª–µ–Ω—ã');
  }

  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –∑–∞—è–≤–æ–∫ –≤ CSV
   */
  exportLeadsToCSV() {
    const leads = this.getSavedLeads();
    if (leads.length === 0) {
      console.log('üìä –ù–µ—Ç –∑–∞—è–≤–æ–∫ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞');
      return null;
    }

    const csvHeader = '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è,–ò—Å—Ç–æ—á–Ω–∏–∫,–°—Ç–∞—Ç—É—Å,–ò–º—è,–¢–µ–ª–µ—Ñ–æ–Ω,Email,–û–±—ä–µ–º (—Ç–æ–Ω–Ω),–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n';
    const csvData = leads.map(lead => {
      const data = lead.formData;
      return [
        lead.timestamp,
        lead.source,
        lead.status || 'new',
        data.name || '',
        data.phone || '',
        data.email || '',
        data.volume || '',
        (data.comment || '').replace(/\n/g, ' ').replace(/"/g, '""')
      ].map(field => `"${field}"`).join(',');
    }).join('\n');

    const csv = '\uFEFF' + csvHeader + csvData; // BOM –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = `ecoalternativa_leads_${new Date().toISOString().split('T')[0]}.csv`;
    link.click();

    console.log('üìä –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: –∑–∞–≥—Ä—É–∂–µ–Ω–æ', leads.length, '–∑–∞—è–≤–æ–∫');
    return csv;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞—è–≤–æ–∫
   */
  getLeadsStats() {
    const leads = this.getSavedLeads();
    const today = new Date().toDateString();
    const todayLeads = leads.filter(lead => new Date(lead.saved_at).toDateString() === today);
    
    return {
      total: leads.length,
      today: todayLeads.length,
      new: leads.filter(l => l.status === 'new').length,
      processed: leads.filter(l => l.status === 'processed').length
    };
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.formHandler = new FormHandler();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ –¥–µ–π—Å—Ç–≤–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
window.enableNotifications = () => {
  if ('Notification' in window && Notification.permission === 'default') {
    Notification.requestPermission().then(permission => {
      if (permission === 'granted') {
        console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω—ã');
      } else {
        console.log('‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã');
      }
    });
  }
};

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
window.showLeads = () => {
  const leads = window.formHandler.getSavedLeads();
  if (leads.length === 0) {
    console.log('üìã –õ–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–µ—Ç');
    return [];
  }
  
  const stats = window.formHandler.getLeadsStats();
  console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫:', stats);
  console.log('üìã –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫:');
  console.table(leads.map(lead => ({
    'ID': lead.id,
    '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è': lead.timestamp,
    '–°—Ç–∞—Ç—É—Å': lead.status || 'new',
    '–ò—Å—Ç–æ—á–Ω–∏–∫': lead.source,
    '–ò–º—è': lead.formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
    '–¢–µ–ª–µ—Ñ–æ–Ω': lead.formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω',
    'Email': lead.formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω',
    '–û–±—ä–µ–º': lead.formData.volume || '–ù–µ —É–∫–∞–∑–∞–Ω'
  })));
  return leads;
};

window.exportLeads = () => {
  const result = window.formHandler.exportLeadsToCSV();
  if (result) {
    console.log('‚úÖ –ó–∞—è–≤–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ CSV —Ñ–∞–π–ª');
  } else {
    console.log('‚ùå –ù–µ—Ç –∑–∞—è–≤–æ–∫ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞');
  }
  return result;
};

window.markProcessed = (leadId) => {
  window.formHandler.markLeadAsProcessed(leadId);
  console.log('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è');
};

window.clearLeads = () => {
  if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏?')) {
    window.formHandler.clearSavedLeads();
    console.log('‚úÖ –í—Å–µ –∑–∞—è–≤–∫–∏ —É–¥–∞–ª–µ–Ω—ã');
  } else {
    console.log('‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ');
  }
};

window.leadsStats = () => {
  const stats = window.formHandler.getLeadsStats();
  console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫:', stats);
  return stats;
}; 